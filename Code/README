RUNNING:
To run the program, you can either launch RunTheSystemTest.java (and edit the input-parameters to the Main class in there), launch RunTheSystem.java with the four input parameters: "String algorithm" "double startNodeLatitude", "double startNodeLongitude", "double goalNodeLatitude", "double goalNodeLongitude", or launch the same class without any input at all.
The program will first search for the Nodes closest to the coordinates you input, then find a route between those Nodes and return the Nodes on that route to you.
The accepted parameters for "String algorithm" are: BFS, DFS, or GBFS. A Star is the default algorithm, so any other input (or no input at all) selects it.

Clicking on the map will place or move the start- or goal marker, depending on which is closest. or alternatively whether they have been placed yet.

TESTING:
There are test-classes for each class in the system, which makes it possible to test each class individually.
There is also a AllTests.java class, which will run all the test-classes together on the same data. These tests will take a little while to run, as there are quite a few of them, but not more than a few seconds.

KNOWN ERRORS:
Some routes seem sub-optimal, and way too long. This is usually caused by missing or mis-labeled routing-data. This data is sourced from OpenStreetMap, so my algorithms are not to blame in these cases.
A good example of one of these sub-optimal routes can be seen in my thesis.